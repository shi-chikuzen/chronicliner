===============================
内部処理について
===============================

.. warning::
    このページは **Chroniclinerに謎の動作をされて困っているJavaScriptがわかる人** 、 **単純に中身が知りたいJavaScriptのわかる物好き** 、 **GitHub Contributor** 向けです

.. note::
    不明点の問い合わせについては :ref:`contact` も併せてご参照ください

1. 概要
================================================================
Chronicliner v2.0.0は、Vueフレームワーク上で動作しています。Vueの基本的な仕様については、 `Vue.jsドキュメント <https://jp.vuejs.org/>`_ を参照してください。

また、UI（CSS styling）はVuetify.jsを使用しています。Vuetify.js特有のHTMLタグや属性については、 `Vuetify.jsドキュメント <https://vuetifyjs.com/ja/>`_ を参照してください。

2. ファイル指定時の処理
===============================
2.1. ファイル読み込み
-------------------------------
`SheetJS <https://sheetjs.com/>`_ ライブラリを用い、指定されたエクセルファイルの読み込みを行います。読み込み後、処理に必要なシート・列が存在するかを検証し、存在しない場合はエラーを返します。

2.2. データのフォーマット
-------------------------------
カテゴリー、教育課程、キャラクター、キャラクターの所属教育課程、イベント、サマリーの順に処理を行います。

2.3. 年表用データ作成
-------------------------------
年表データの作成、サマリーの更新、年表データの更新の順に処理を行います。

2.4. 表示
-------------------------------
データ読み込み時は年表データのフィルタリングは行わず、年表示列・タイムライン列の表示に関わる変更のみを行います。


3. 表示設定変更・年折りたたみ時の処理
========================================
年表データの更新、キャラクター死亡後の最初の表示行に対するクラス付与、年の最初のイベント行に対するクラス付与の順に処理を行います。また、年表データ更新後、表示設定・年折りたたみ状態によるフィルタリング・変更を行います。

4. ウィンドウサイズ変更時の処理
========================================
4.1. init / destroy
----------------------------
DOM要素のマウント時、 ``window.addEventListener('resize', {FUNCTION});`` でウィンドウサイズの変更を検知するように設定してします。DOM要素破棄時には ``window.addRemoveListener('resize', {FUNCTION});`` でイベントリスナーを破棄します。

4.2. イベント発生時
-------------------------------
変更された ``window.innerHeight`` と各要素の ``padding`` 、及び ``getBoundingClientRect().y`` で取得できる年表の上端座標からアプリケーションが画面内に収まる高さの最大値を算出し、年表テーブルの ``height`` を書き換えます。

なお、lodashを使用してイベント発火頻度を落としています。